---
/**
 * Props:
 * - items: string[]  // list of topics to rotate
 * - intervalMs?: number // time between switches (default 2200)
 * - title?: string  // section label
 */
const {
  items = ["Streamlit", "LLM Memory", "AWS S3", "Astro Websites", "Realtime WebRTC", "MongoDB"],
  intervalMs = 2200,
  title = "Currently learning"
} = Astro.props;
---

<div class="mx-auto w-full rounded-2xl border border-white/10 bg-white/5 p-5 backdrop-blur">
  <div class="flex items-center gap-2">
    <span class="text-sm uppercase tracking-wide text-slate-400">{title}</span>
    <span class="h-px flex-1 bg-white/10"></span>
  </div>

  <div class="mt-3 flex items-center gap-3">
    <span class="inline-block h-2 w-2 animate-pulse rounded-full bg-emerald-400/80"></span>

    <span id="cl-text" class="text-lg md:text-xl font-medium text-slate-100 transition-opacity duration-500 opacity-100">
      {items[0]}
    </span>
  </div>

  <p class="mt-2 text-sm text-slate-400">
    A snapshot of tools & topics Iâ€™m exploring.
  </p>
</div>

<script define:vars={{ items, intervalMs }}>
  const el = document.getElementById('cl-text');
  const { items: learningItems, intervalMs: learningInterval } = {
    items,
    intervalMs
  };

  let i = 0;
  function swap() {
    // fade out
    el.classList.add('opacity-0');
    setTimeout(() => {
      i = (i + 1) % learningItems.length;
      el.textContent = learningItems[i];
      // fade in
      el.classList.remove('opacity-0');
    }, 250); // match half of duration-500
  }

  let timer = setInterval(swap, learningInterval);

  // pause on hover (nice UX)
  el?.parentElement?.addEventListener('mouseenter', () => clearInterval(timer));
  el?.parentElement?.addEventListener('mouseleave', () => { timer = setInterval(swap, learningInterval); });
</script>